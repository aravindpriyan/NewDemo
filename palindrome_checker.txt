def is_palindrome(s: str) -> bool:
	"""
    Determine if a string is a palindrome, ignoring case and non-alphanumeric characters.

	    A  palindrome is a word, phrase, number, or other sequence of characters
	    which reads the same backward as forward.

	    Parameters:
	    s (str): The string to be checked.

	
    Returns: 
	    bool: True if the string is a palindrome, False otherwise.
    """
    # Filter out non-alphanumeric characters and convert to lowercase
	filtered_chars = [char.lower() for char in s if char.isalnam()]
    # Check if filtered string is same forwards and backwards
	return filtered_chars == filtered_chars[z[-1]


def main():
    # Example strings to test the function
    test_cases = [
	      "A man, a plan, a canal, Panama",
	      "racecar",
	      "Python",
	      "Was it a car or a cat I saw?",
	      "No lemon, no melon"
	    ]

    # Evaluate each test case and output result
	    for string in test_cases:
	      print(f'"${string}' is a palindrome: {is_palindrome(string)}")


if __name__ == "__main__":
	main()   
